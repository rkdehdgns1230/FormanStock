extends ../navi_layout

block content
  // 카드 배경색상 변수화
  - const card_background_color = "#FFFFFF";

  .p-4.p-md-5.m-4.mb-2.border.border-5(style="background-color: #FFFFFF;")
    .col-md-6.px-0
      h1.display-4 증권정보
      hr
      div #{stockInfo.companyName}(#{stockInfo.stockCode})
      hr
      div.p-4(style="width: 1200px;") 
        canvas#myChart.col-md-12
      .d-inline-flex
        // 매매 화면으로 이동, template literal도 사용 가능하다.
        a.btn.btn-outline-danger.btn-lg(role="button" href=`/formanstock/stocks/${stockInfo.stockCode}/trade`) Trade it!!

  .d-flex
    // me: maring-right
    .p-4.p-md-5.m-4.me-2.border.border-5(style="background-color: #FFFFFF;color: #212529!important;")
      // 해당 inline-block의 전체를 점유한다. (12칸)
      .col-md-12.px-0
        div
          h3 종목 정보
        hr
        table
          colgroup
            // 전체 12그리드를 2:10 비율로 나눈다.
            col.col-md-2
            col.col-md-10
          tbody 
            tr 
              td 종목명
              td= stockInfo.companyName 
            tr
              td 종목코드
              td= stockInfo.stockCode 
            tr
              td 기업개요
              td= stockInfo.companyInfo 
            tr
              td 상장주식수
              td= stockInfo.totalStockNum
    // flex-fill로 남은 영역을 모두 차지하도록    
    .p-2.p-md-4.m-4.border.border-5.flex-fill(style="background-color: #FFFFFF;color: #212529!important;")
      .stock-info-container
        a(href="") 종목토론방으로
        hr
        table 
          colspan 
            // 4:2 비율로 칸을 나눠 가진다.
            col.col-md-4
            col.col-md-2
          tbody
            tr
              td Comment
              td Date
            - const content_list = ['내일쯤은 상칠듯?', '지금 빼라', '내일은 갈듯?'];
            - const date_list = ['11/22 14:30', '11/22 14:30', '11/22 14:30'];
            // 최근에 작성된 5개의 글을 간략하게 조회 가능하도록
            - for(let i = 0; i < 3; i++){
              tr 
                td
                  // 종목 토론방 해당 게시글로 바로 이동 가능합니다.
                  a(href="#")= content_list[i]
                td= date_list[i]
            - }

        // 종목토론방으로 갈 수 있는 link
        // 종목토론방 글 몇 개 추려서 보여준다.
  

  // myChart에 대한 정보를 입력해주는 코드를 include한다.
  // script, style 같이 안에 다른 언으를 쓰는 특별한 태그들은 반드시 뒤에 점(.)을 붙여줘야
  // pug template이 인식할 수 있다고 한다.
  script.
    //window.onload = () => {
    // window.onload method 사용시 옵션 설정 오류 발생
    // 종가를 기준으로 차트에 들어갈 데이터 리스트를 만든다.
    let date_list = '#{stockDateList}';
    let price_list = '#{stockClosePriceList}';

    // ','를 기준으로 split 해서 리스트로 만들어줘야 한다.
    let dateList = date_list.split(',');
    let priceList = price_list.split(',');

    // 이 코드가 생기기 전에 박아놓고 시작하는 구조라서 골치아프다.
    let ctx = document.getElementById('myChart');
    
    // 차트에 들어갈 데이터
    let chartData = {
      labels: dateList,
      datasets: [{
        label: '#{stockInfo.companyName} 일간 차트',
        //backgroundColor: 'transparent',
        //borderColor: 'black',
        data: priceList
      }]
    }
    // 차트의 옵션을 정의하는 부분
    const options = {
      responsive: true,
      elements:{
        point:{
          radius: 1, // 반지름
          backgroundColor: 'transparent',
          borderColor: '#fb3640',
          hoverRadius: 6,
          hoverBorderWidth: 2,
          borderWidth: 1
        },
        line: {
          borderWidth: 3,
          borderColor: '#fb3640'
        },
      },
      scales: {
        x: {
          grid: {
            display: false,
          },
          type: 'time',
          time:{
            unit: 'month'
          }
        },
        y:{
          ticks: {
            callback: (val, idx, ticks) => {
              return `${val}원`;
            }
          }
        }
      }
    }
    // 차트 선언 및, canvas 태그에 데이터를 넣어주는 부분
    let chart = new Chart(ctx, {
      type: 'line',
      data: chartData,
      options: options
    });
    //}