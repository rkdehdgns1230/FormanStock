extends ../navi_layout

block content 
  style.
    .price-container{
      background-color: white;
    }
    .price-container:hover{
      background-color: #F3EFE0;
    }
  // 기준 가격은 최신 데이터를 기반으로 가져오도록 구현한다.
  - const default_price = 10000;
  - const price_gap = default_price / 100;
  // 템플릿 틀 디자인 완료
  .whole-box.m-4.d-flex.flex-fill.flex-row
    .left-box.flex-fill.m-2.p-2.border.border-secondary.rounded(style="background-color: #434242;")
      h3.p-3 매매가
      div.p-3 클릭해서 매매가 선택이 가능해요!!
      // 마커를 지운 리스트를 사용한다.
      ul.p-1(style="list-style-type: none;")
        // 매수 or 매도는 색깔로 구분한다.
        // 버튼 선택시 매매하는 폼에 가격이 설정되도록
        // 가격대에 따른 버튼은 모두 존재하되, 매수 or 매도 대상인
        // 주식의 개수가 버튼 내부에 표현되도록 구현한다.
        - for(let i = 0; i < 10; i++){
          li.border.border-danger.m-2.text-center.price-container.rounded(style="color: red;")
            button.p-1.price-box.btn.btn-link(style="text-decoration: none; color: red;") #{default_price + price_gap * (10 - i)}
            span.align-middle (+#{10 - i}%)
        - }
        li.border.border-secondary.m-2.text-center.price-container.rounded
         button.p-1.price-box.btn.btn-link(style="text-decoration: none; color: black;") #{default_price}
         span.align-middle ( 0%)
        - for(let i = 1; i <= 10; i++){
          li.border.border-primary.m-2.text-center.price-container.rounded(style="color: blue;")
            button.p-1.price-box.btn.btn-link(style="text-decoration: none; color: blue;") #{default_price - price_gap * i}
            span.align-middle (-#{i}%)
        - }

    .right-box.d-flex.flex-column.flex-fill.m-2.border
      .upper-box.flex-fill
        .card.mb-3
          .card-body
            h5.card-title #{stockInfo.companyName}
            h6.card-subtitle.my-1 (#{stockInfo.stockCode}) 
            p.card-text #{stockInfo.companyInfo}
        // 가격 정보 입력하는 input 창
        .card.mb-3.p-4
          .content-title.d-inline-flex
            i.fa-regular.fa-circle-check(style="font-size:30px;")
            h3.ms-2 모의 거래시 다음 내용을 참고하세요! 
          ul
            li 매수 or 매도는 +10%에서 -10% 사이의 가격으로 가능합니다.
            li 가격 단위는 현재 기준가격의 1%단위로 결정됩니다.
            li 기준 가격은 최신일자의 시가로 정해집니다.
            li 매매를 하기 위해서는 다른 주주가 매물을 등록한 경우만 가능합니다.
            li 주식이 거래되는 순서는 먼저 등록된 매물순으로 정해집니다.
            li 매도하는 매물이 있는 경우 바로 매수가 가능합니다.
            li 매도하는 매물이 없는 경우 매수 요청 등록이 가능합니다.
            li 매수 요청은 해당 가격에 매도하는 매물이 없는 경우 등록할 수 있습니다.
            
        .input-group.input-group-lg.mb-3
          .input-group.prepend
            span.input-group-text#inputGroup-sizing-lg 매매가 (원)
            input.form-control#price-form(type="number" name="trade_price" arai-label="Large" aria-description="inputGroup-sizing-sm" required)
        


      .lower-box.d-flex.border.border-secondary 
        .left-box.flex-fill.p-2.border.border-secondary.col-md-8
          h3 종목토론방
          ul
            li
              a(href="#") 1번 게시글
            li
              a(href="#") 2번 게시글
            li
              a(href="#") 3번 게시글
        .right-box.flex-fill.d-flex.flex-column.p-2.border.border-secondary.col-md-4
          h5 버튼을 눌러 매수 혹은 매도가 가능합니다!
          button.btn.btn-danger.m-1 BUY
          button.btn.btn-primary.m-1 SELL

    script.
      let btnEle = document.getElementsByClassName('price-box');
      let formEle = document.getElementById('price-form');

      // button(가격 정보가 담김)을 누르면, input tag에 매매 가격이 담긴다.
      for(let i = 0; i < btnEle.length; i++){
        btnEle[i].onclick = () => {
          let price = btnEle[i].innerHTML;
          // 버튼에서 가져온 가격 정보를 input form에 넣어준다.
          console.log(`price: ${price}`);
          // price input tag의 value 속성에 값을 넣어준다.
          formEle.setAttribute('value', price);
        }
      }
