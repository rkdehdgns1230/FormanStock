extends ../navi_layout

block content 
  style.
    .price-container{
      border: 3px solid white;
    }
    .price-container:hover{
      border: 3px solid black;
    }
  // 기준 가격은 최신 데이터를 기반으로 가져오도록 구현한다.
  - const default_price = 10000;
  - const price_gap = default_price / 100;
  // 템플릿 틀 디자인 완료
  .whole-box.m-4.d-flex.flex-fill.flex-row
    .left-box.flex-fill.m-2.card.mb-4(style="background-color: white;")
      .card-header.fs-3(style="background-color: #0D1117; color: white;") 매매가
      // 마커를 지운 리스트를 사용한다.
      ul.p-1(style="list-style-type: none;")
        // 매수 or 매도는 색깔로 구분한다.
        // 버튼 선택시 매매하는 폼에 가격이 설정되도록
        // 가격대에 따른 버튼은 모두 존재하되, 매수 or 매도 대상인
        // 주식의 개수가 버튼 내부에 표현되도록 구현한다.
        - for(let i = 0; i < 10; i++){
          li.m-2.text-center.price-container.rounded(style="color: white; background-color: #DA3F3A")
            button.p-1.price-box.btn.btn-link(style="text-decoration: none; color: white") #{default_price + price_gap * (10 - i)}
            span.align-middle (+#{10 - i}%)
        - }
        li.m-2.text-center.price-container.rounded
         button.p-1.price-box.btn.btn-link(style="text-decoration: none; color: black;") #{default_price}
         span.align-middle ( 0%)
        - for(let i = 1; i <= 10; i++){
          li.m-2.text-center.price-container.rounded(style="color: white; background-color: #0170A8")
            button.p-1.price-box.btn.btn-link(style="text-decoration: none; color: white;") #{default_price - price_gap * i}
            span.align-middle (-#{i}%)
        - }

    .right-box.d-flex.flex-column.flex-fill.m-2
      // 매수 매도 행동에 따라 다른 action에 대한 처리가 필요하다.
      form.upper-box.flex-fill(action='', method="post" name="trade_form")
        .card.mb-4
          .card-header.fs-3(style="background-color: #0D1117; color: white;") #{stockInfo.companyName} (#{stockInfo.stockCode}) 
          .card-body
            p.card-text #{stockInfo.companyInfo}
        // 가격 정보 입력하는 input 창
        .card.mb-4
          .content-title
            .card-header.fs-3(style="background-color: #0D1117; color: white;")
              i.fa-regular.fa-circle-check
              span.ms-2 모의 거래시 다음 내용을 참고하세요!
            .card-body 
              ul
                li 매수 or 매도는 +10%에서 -10% 사이의 가격으로 가능합니다.
                li 가격 단위는 현재 기준가격의 1%단위로 결정됩니다.
                li 기준 가격은 최신일자의 시가로 정해집니다.
                li 매도하는 매물이 있는 경우 바로 매수가 가능합니다.
          
        .card.mb-4 
          .left-box.flex-fill
            .card-header.fs-3(style="background-color: #0D1117; color: white;")
              i.fas.fa-regular.fa-comments
              span  종목토론방
            .card-body
              table.table.table-hover
                thead 
                  tr 
                    th(scope="col") #
                    th(scope="col") Title
                    th(scope="col") Date
                tbody
                  -for(let i = 1; i <= 10; i++){
                  tr
                    th= i
                    th
                      a(href="#" style="text-decoration: none; color: black") #{i}번 title
                    th #{i}번 date
                  -}
        div.mb-3.d-flex.ms-5
          .input-group.input-group-lg.ms-4
            .input-group.prepend
              span.input-group-text#inputGroup-sizing-lg 매매가 (원)
              input.form-control#price-form(type="number" name="trade_price" arai-label="Large" aria-description="inputGroup-sizing-sm" required)

          .input-group.input-group-lg.ms-4
            select.form-select#inputGroupSelect04(aria-label="Example select with button" name="trade_amount")
              option(selected) 수량 선택
              - for(let i = 1; i <= 10; i++){
              option(value=`${i}`)= i
              -}
        
      .lower-box.d-flex
        .left-box.flex-fill.col-md-8
          .card
            .card-header.fs-4(style="background-color: #0D1117; color: white;") 내 보유 정보
            .p-4.
              현재 #{userInfo.info.USER_ID}님이 보유하신 #{stockInfo.companyName}(#{userStockInfo.stock_code})의 주식은 총 #{userStockInfo.stock_cnt}주 입니다.
        .right-box.flex-fill.d-flex.flex-column.p-2.col-md-4
          h5.text-white 매수 / 매도
          button.btn.btn-danger.m-1#buy-btn BUY
          button.btn.btn-primary.m-1#sell-btn SELL

    script.
      let btnEle = document.getElementsByClassName('price-box');
      let formEle = document.getElementById('price-form');

      // button(가격 정보가 담김)을 누르면, input tag에 매매 가격이 담긴다.
      for(let i = 0; i < btnEle.length; i++){
        btnEle[i].onclick = () => {
          let price = btnEle[i].innerHTML;
          // 버튼에서 가져온 가격 정보를 input form에 넣어준다.
          console.log(`price: ${price}`);
          // price input tag의 value 속성에 값을 넣어준다.
          formEle.setAttribute('value', price);
        }
      }
      let buyButton = document.getElementById('buy-btn');
      let sellButton = document.getElementById('sell-btn');

      let tradeForm = document.trade_form;
      // 버튼 클릭시에
      // 각 버튼에 맞는 요청을 보내기 위해 action을 변경하고 제출한다.
      buyButton.onclick = () => {
        tradeForm.action = `trade/buy`;
        tradeForm.submit();
      }

      sellButton.onclick = () => {
        tradeForm.action = `trade/sell`;
        tradeForm.submit();
      }